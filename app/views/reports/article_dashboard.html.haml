%p.utility_bar
  = link_to "View All Articles", dashboard_path(@user[:key])
%h1== Stats for &quot;#{CGI.unescape(@article.title)}&quot;

%date
  =form_tag article_dashboard_path(@user[:key], @article.id), :method => :get do
    == from #{text_field_tag(:start_date, I18n.l(@start_date), {:id => "start_date"})}
    == to #{text_field_tag(:end_date, I18n.l(@end_date), {:id => "end_date"})}
    = submit_tag "Update"
%br
%hr

%h2== People Viewing This Article
#page_view_plot

%h2.summary== This article was viewed #{@total_view_count} times.
#sources_loading
  = render 'loading_indicator'
#source_chart

%h2 How Are People Finding &quot;#{@article.title}&quot;?
#keyphrases_loading
  = render 'loading_indicator'

%h2 Where Are People Coming From?
#domains_loading
  = render 'loading_indicator'
%table#domains

- content_for :page_javascript do
  = javascript_include_tag 'jquery.highcharts.page-view-plot'
  
  :javascript
    $(function(){
      
      $.getJSON("#{article_sources_url(@user[:key], @article.id)}", {}, function(data){
        $("#sources_loading").hide();
        $('#source_chart').addClass("source_chart").source_chart(data);
      });
      
      // Render the domain counts asynchronously
      $("#domains").load("#{article_domains_url(@user[:key], @article.id)}", {}, function(){
        $("#domains_loading").hide();
      });
      
      // Render the keyphrase counts asynchronously
      $("#keyphrases").load("#{article_keyphrases_url(@user[:key], @article.id)}", {}, function(){
        $("#keyphrases_loading").hide();
      });
      
      $("#pagination a").live("click", function() {
          $.get(this.href, function(data) {
            $('#keyphrases').html(data);
          });
          return false;
      });
      
      var dates = $( "#start_date, #end_date" ).datepicker({
        numberOfMonths: 1,
        minDate: new Date(2011, 1-1, 1),
        onSelect: function( selectedDate ) {
          var option = this.id == "start_date" ? "minDate" : "maxDate",
          instance = $( this ).data( "datepicker" ),
          date = $.datepicker.parseDate(
          instance.settings.dateFormat ||
          $.datepicker._defaults.dateFormat,
          selectedDate, instance.settings );
          dates.not( this ).datepicker( "option", option, date );
        }
      });
    
      $.datepicker.setDefaults($.datepicker.regional["#{I18n.locale.to_s}"]);
      
      $('#page_view_plot').page_view_plot({
        series: [{
          name: 'This week',
          pointInterval: #{1.day * 1000},
          pointStart: #{@start_date.at_midnight.to_i * 1000},
          data: #{prepare_data(@view_counts, @start_date, @end_date)}
        }]
      });
    });